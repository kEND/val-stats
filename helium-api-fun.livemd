# Helium API fun

## Top

## Helium API for Reward/Prices

```elixir
Mix.install([
  {:tesla, "~> 1.4"},
  {:jason, ">= 1.0.0"},
  {:poison, "~> 5.0"},
  {:vega_lite, "~> 0.1.0"},
  {:kino, "~> 0.3.0"}
])
```

```elixir
defmodule HeliumClient do
  require Tesla

  # helium-api.stakejoy.com
  def client(url \\ "https://api.helium.io/") do
    Tesla.client([
      {Tesla.Middleware.BaseUrl, url},
      Tesla.Middleware.JSON
    ])
  end
end
```

```elixir
url = "https://helium-api.stakejoy.com"
# url = "https://api.helium.io/"

slk = "114nxJxnwFXrPMnCMHir3ZxddpveGGwVAyKitPo293yFAB69DN2"
ups = "112J6SmH7LGKNLDyG6Wbqd9pmA2zAJbgNcmAwQZtYKYmNQunYd73"

{:ok, %{body: body}} = HeliumClient.client(url) |> Tesla.get("/v1/validators/" <> slk)
```

```elixir
{:ok, %{body: body}} = HeliumClient.client(url) |> Tesla.get("/v1/validators/" <> ups)
```

```elixir
%{"data" => %{"penalties" => penalties}} = body
penalties
```

#### UPS CGs of 8/25

> looks like 2 good CGs and then the third was the "last three"

* 3 solid CGs without perf penalties
* Netdata metrics look good
* 4th CG, we're in the **last three** validators via `hbbft perf`.
* 0/72 seen early in that CG for all three of the **last three**.
* perf penalties...

Posted a question/comment on discord #validators.  We'll see if anything comes of it.  Would `build-from-source` prevent this?  Would a better network?

`build-from-source` seems unlikely to have much influence given the correlation of the last three.  A better network could only help, but this also seems more of a bug related to position in CG.

* [ ] tracking the entire CG population throughout several CGs would be important to confirm this again.

##### after 3rd CG, a 0.2 perf, so network isn't great

```
    "penalties" => [
         %{"amount" => 0.099853515625, "height" => 975914, "type" => "performance"},
         %{"amount" => 0.19970703125, "height" => 981507, "type" => "performance"},
         %{"amount" => 0.858734130859375, "height" => 975548, "type" => "performance"},
         %{"amount" => 0.8588104248046875, "height" => 975614, "type" => "performance"},
         %{"amount" => 0.5, "height" => 975482, "type" => "tenure"},
         %{"amount" => 0.5, "height" => 975515, "type" => "tenure"},
         %{"amount" => 0.5, "height" => 975548, "type" => "tenure"},
         %{"amount" => 0.5, "height" => 975581, "type" => "tenure"},
         %{"amount" => 0.5, "height" => 975881, "type" => "tenure"},
         %{"amount" => 0.5, "height" => 981436, "type" => "tenure"},
         %{"amount" => 0.5, "height" => 981469, "type" => "tenure"},
         %{"amount" => 0.5, "height" => 981507, "type" => "tenure"}
       ],

```

<!-- livebook:{"break_markdown":true} -->

### now for rewards...

```elixir
query = [min_time: "2021-07-01T00:00:00.000000Z", max_time: "2021-10-31T00:00:00.000000Z"]

{:ok, %{body: body}} =
  HeliumClient.client(url) |> Tesla.get("/v1/validators/" <> slk <> "/rewards", query: query)
```

```elixir
{:ok, %{body: body}} =
  HeliumClient.client(url)
  |> Tesla.get("/v1/validators/" <> slk <> "/rewards", query: [cursor: body["cursor"]])
```

```elixir
slk_rewards = body["data"]
```

adjust the above to get rewards by month?

```elixir
# sort the rewards
slk_rewards = Enum.sort_by(slk_rewards, & &1["block"], :asc)
```

```elixir
query = [min_time: "2021-07-01T00:00:00.000000Z", max_time: "2021-10-31T00:00:00.000000Z"]

{:ok, %{body: body}} =
  HeliumClient.client(url) |> Tesla.get("/v1/validators/" <> ups <> "/rewards", query: query)

{:ok, %{body: body}} =
  HeliumClient.client(url)
  |> Tesla.get("/v1/validators/" <> ups <> "/rewards", query: [cursor: body["cursor"]])

ups_rewards = body["data"]
```

```elixir
# sort the rewards
ups_rewards = Enum.sort_by(ups_rewards, & &1["block"], :asc)
```

## Graphs

```elixir
alias VegaLite, as: Vl
```

```elixir
block = 917_527

defmodule BlockPrice do
  alias HeliumClient
  @url "https://api.helium.io"
  def price(block) do
    {:ok, %{body: %{"data" => data}}} =
      HeliumClient.client(@url) |> Tesla.get("/v1/oracle/prices/" <> Integer.to_string(block))

    data["price"] / 100_000_000
  end
end

BlockPrice.price(block)
```

```elixir
slk_data =
  slk_rewards
  |> Enum.map(fn x ->
    %{
      "block" => x["block"],
      "amount" => x["amount"] / 100_000_000,
      "price" => BlockPrice.price(x["block"]),
      "hash" => x["hash"]
    }
  end)
```

```elixir
ups_data =
  ups_rewards
  |> Enum.map(fn x ->
    %{
      "block" => x["block"],
      "amount" => x["amount"] / 100_000_000,
      "price" => BlockPrice.price(x["block"]),
      "hash" => x["hash"]
    }
  end)
```

```elixir
Vl.new(width: 750, height: 400, title: "Sharp Leather Kangaroo HNT/USD")
|> Vl.data_from_values(slk_data)
|> Vl.encode_field(:x, "block")
|> Vl.layers([
  Vl.new()
  |> Vl.mark(:bar, color: "#6BC702")
  |> Vl.encode_field(:y, "amount", type: :quantitative, title: "HNT"),
  Vl.new()
  |> Vl.mark(:line)
  |> Vl.encode_field(:y, "price", type: :quantitative, title: "USD")
  |> Vl.encode(:size, value: 2)
])
|> Vl.resolve(:scale, y: :independent)
```

```elixir
Vl.new(width: 750, height: 400, title: "Uneven Peanut Swift HNT/USD")
|> Vl.data_from_values(ups_data)
|> Vl.encode_field(:x, "block")
|> Vl.layers([
  Vl.new()
  |> Vl.mark(:bar, color: "#6BC702")
  |> Vl.encode_field(:y, "amount", type: :quantitative, title: "HNT"),
  Vl.new()
  |> Vl.mark(:line)
  |> Vl.encode_field(:y, "price", type: :quantitative, title: "USD")
  |> Vl.encode(:size, value: 2)
])
|> Vl.resolve(:scale, y: :independent)
```

```elixir
slk_data =
  slk_rewards
  |> Enum.map(fn x ->
    %{
      "validator" => "kanga",
      "timestamp" => x["timestamp"],
      "amount" => x["amount"] / 100_000_000,
      "price" => BlockPrice.price(x["block"]),
      "block" => x["block"],
      "hash" => x["hash"]
    }
  end)

Enum.reverse(slk_data) |> Enum.take(15) |> IO.inspect()
```

```elixir
ups_data =
  ups_rewards
  |> Enum.map(fn x ->
    %{
      "validator" => "swift",
      "timestamp" => x["timestamp"],
      "amount" => x["amount"] / 100_000_000,
      "price" => BlockPrice.price(x["block"]),
      "block" => x["block"],
      "hash" => x["hash"]
    }
  end)

Enum.reverse(ups_data) |> Enum.take(15)
```

```elixir
val_data = slk_data ++ ups_data
```

```elixir
Vl.new(width: 740, height: 400, title: "Validator HNT/USD")
|> Vl.data_from_values(val_data)
|> Vl.encode_field(:x, "timestamp",
  type: :temporal,
  time_unit: [
    unit: "yearmonthdate",
    step: 1
  ],
  title: "Date"
)
|> Vl.layers([
  Vl.new()
  |> Vl.mark(:bar, color: "#6BC702", tooltip: true)
  |> Vl.encode_field(:y, "amount",
    type: :quantitative,
    aggregate: :sum,
    stack: "null",
    title: "HNT"
  )
  |> Vl.encode(:color,
    field: "validator",
    scale: [range: ["#675193", "#CA8861"]]
  )
  |> Vl.encode(:opacity, value: 0.6),
  Vl.new()
  |> Vl.mark(:line)
  |> Vl.encode_field(:y, "price",
    type: :quantitative,
    aggregate: :mean,
    title: "USD"
  )
  |> Vl.encode(:size, value: 2)
])
|> Vl.resolve(:scale, y: :independent)
```

#### Notes on graph

* September 6 - 18 dryspell due to perf penalties on 1.2.2 on OVH bare.
* September 18th - kanga was on interserver Ryzen for 10 CGs
* Septemper 18th (post CG run) - peanut switched to interserver Ryzen
* September 23rd - peanut on interserver for 10 CG, no perf run
* Switched kanga back to Ryzen, but validators are only 0.4556 apart
* September 25th - Unfortunate peanut election on OVH.  2 CGs 2 big perf penalties

<!-- livebook:{"break_markdown":true} -->

### healthchecks.io

<p style="center">
  <a href="https://healthchecks.io/projects/50f6d1f2-d3db-49f0-87d7-a1b0619262e5/checks/"><img src="https://healthchecks.io/badge/de919987-3574-4da8-b3b2-56b43f/dyKy9Pv0-2/sharp-leather-kangaroo.svg" style="max-width: 100%;"></a>
  <a href="https://healthchecks.io/projects/50f6d1f2-d3db-49f0-87d7-a1b0619262e5/checks/"><img src="https://healthchecks.io/badge/de919987-3574-4da8-b3b2-56b43f/FUbTcrUk-2/pbau.svg" style="max-width: 100%;"></a>
  <a href="https://healthchecks.io/projects/50f6d1f2-d3db-49f0-87d7-a1b0619262e5/checks/"><img src="https://healthchecks.io/badge/de919987-3574-4da8-b3b2-56b43f/QUXmy6cJ-2/uneven-peanut-swift.svg" style="max-width: 100%;"></a>
  <a href="https://healthchecks.io/projects/50f6d1f2-d3db-49f0-87d7-a1b0619262e5/checks/"><img src="https://healthchecks.io/badge/de919987-3574-4da8-b3b2-56b43f/8j7WRPwG-2/pbau2.svg" style="max-width: 100%;"></a>
</p>

Netdata metrics are [here](https://app.netdata.cloud/spaces/plumbum/rooms/validators/nodes/7ff41d8a-f1a6-423f-99e2-ceb55dd31039#chartName=menu_system&utc=America%2FNew_York)

```elixir
'''
Vl.new(width: 750, height: 400, title: "Uneven Peanut Swift HNT/USD")
|> Vl.data_from_values(ups_data)
|> Vl.encode_field(:x, "timestamp", 
                    type: :temporal,
                    time_unit: [
                      unit: "yearmonthdate",
                      step: 1
                      ],
                    title: "Date"
                  )  
|> Vl.layers([
  Vl.new()
  |> Vl.mark(:bar, color: "#6BC702", tooltip: true)
  |> Vl.encode_field(:y, "amount", 
                      type: :quantitative,
                      aggregate: :sum,
                      title: "HNT"),
  Vl.new()
  |> Vl.mark(:line)
  |> Vl.encode_field(:y, "price", 
                      type: :quantitative,
                      aggregate: :mean, 
                      title: "USD")
  |> Vl.encode(:size, value: 2)
])
|> Vl.resolve(:scale, y: :independent)
'''
```

## Tables

```elixir
timestamp = "2021-07-12T01:20:13.000000Z"
{:ok, dt, _} = DateTime.from_iso8601(timestamp)
dt.to_string("%Y-%M")
```

```elixir
totals =
  val_data
  |> Enum.map(& &1)
```

```elixir
"""
### Summary for July and Aug (MTD)

| Validator | July (HNT)   | July avg (USD) | Aug (HNT)   | Aug avg (USD) |
|-----------|--------------|----------------|-------------|---------------|
#{Enum.each(totals, &"| #{&1["validator"]} | #{&1["july_hnt"]} | #{&1["july_usd"]} | #{&1["price"]} |\n")}

### Raw Results for July and Aug (MTD)

| Validator | Date | Amount (HNT) | Price (USD) | block | hash |
|-----------|------|--------------|-------------|-------|------| 
#{Enum.map(val_data, &"| #{&1["validator"]} | #{&1["timestamp"]} | #{&1["amount"]} | #{&1["price"]} | #{&1["block"]} | #{&1["hash"]} |\n")}
"""
|> Kino.Markdown.new()
```

> add table, then persist the data....

## Local JSON RPC playground

```elixir
# Tesla.post("http://localhost:4647",%{jsonrpc: "2.0", id: 1, method: "info_in_consensus"})

defmodule LocalApi do
  alias Poison.Parser

  use Tesla, only: [:post], docs: false

  plug(Tesla.Middleware.BaseUrl, "http://localhost:4647")
  plug(Tesla.Middleware.JSON)

  def in_consensus?() do
    {:ok, %{body: body}} = post("/", %{jsonrpc: "2.0", id: 1, method: "info_in_consensus"}, [])
    %{"result" => %{"in_consensus" => in_consensus}} = Parser.parse!(body)
    in_consensus
  end

  def name() do
    {:ok, %{body: body}} = post("/", %{jsonrpc: "2.0", id: 1, method: "info_name"}, [])
    %{"result" => %{"name" => name}} = Parser.parse!(body)
    name
  end

  def hbbft_perf() do
    case post("/", %{jsonrpc: "2.0", id: 1, method: "hbbft_perf"}, []) do
      {:ok, %{body: body}} ->
        %{"result" => result} = Parser.parse!(body)
        # IO.inspect body
        result

      %{"error" => error} ->
        IO.puts(error["message"])
        nil

      {_error, _stuff} ->
        nil
    end
  end

  def height do
    {:ok, %{body: body}} = post("/", %{jsonrpc: "2.0", id: 1, method: "info_height"}, [])
    %{"result" => %{"height" => height}} = Parser.parse!(body)
    height
  end

  def capture_hbbft() do
    {path, timestamp} = create_elected_dir()
    path_to_perf_file = Path.join([path, "#{Integer.to_string(timestamp)}.json"])
    content = hbbft_perf()

    IO.puts(path_to_perf_file)

    case File.write(path_to_perf_file, Poison.encode!(content), [:binary]) do
      :ok -> IO.puts("hbbft_perf written to #{path_to_perf_file}")
      {:error, reason} -> IO.puts("failed to write hbbft_perf: #{IO.inspect(reason)}")
    end
  end

  def create_elected_dir() do
    timestamp = DateTime.utc_now() |> DateTime.to_unix()

    {:ok, path} = File.cwd()

    elected_dir = Path.join([path, "hbbft_perf", Integer.to_string(timestamp)])

    case File.mkdir_p(elected_dir) do
      :ok -> {elected_dir, timestamp}
      {:error, reason} -> IO.puts(reason)
    end
  end
end

defmodule PbauQuartusApi do
  alias Poison.Parser

  use Tesla, only: [:post], docs: false

  plug(Tesla.Middleware.BaseUrl, "http://pbauquartus.painlesspm.com:4647")
  plug(Tesla.Middleware.JSON)

  def in_consensus?() do
    {:ok, %{body: body}} = post("/", %{jsonrpc: "2.0", id: 1, method: "info_in_consensus"}, [])
    %{"result" => %{"in_consensus" => in_consensus}} = Parser.parse!(body)
    in_consensus
  end

  def height do
    {:ok, %{body: body}} = post("/", %{jsonrpc: "2.0", id: 1, method: "info_height"}, [])
    %{"result" => %{"height" => height}} = Parser.parse!(body)
    height
  end
end
```

```elixir
# testing the hbbft_perf capture
LocalApi.capture_hbbft()
# Tesla.post("/", %{jsonrpc: "2.0", id: 1, method: "hbbft_perf"}, [])
```

```elixir
name = LocalApi.name()
height = LocalApi.height()
in_con = if LocalApi.in_consensus?(), do: "", else: " not"
IO.puts(name <> " is" <> in_con <> " in consensus (#{height}).")

in_con = if PbauQuartusApi.in_consensus?(), do: "", else: " not"
IO.puts("sharp-leather-kangaroo is" <> in_con <> " in consensus (#{PbauQuartusApi.height()}).")
```

```elixir
timestamp = DateTime.utc_now() |> DateTime.to_unix()

{:ok, path} = File.cwd()

elected_dir = Path.join([path, "hbbft_perf", Integer.to_string(timestamp)])

case File.mkdir_p(elected_dir) do
  :ok -> nil
  {:error, reason} -> IO.puts(reason)
end
```

```elixir
# perf = LocalApi.hbbft_perf()

"""
in <target> #{elected_dir} dir, when elected? create subdirectory using unix timestamp #{timestamp}
every 30s or so, run hbbft_perf inserting a timestamp into the datastructure.
when not elected, stop
"""
```

```elixir
perf = LocalApi.hbbft_perf()
"#{perf["current_height"]}: #{perf["blocks_since_epoch"]} blocks since epoch"
```

```elixir
%{"consensus_members" => consensus_group} = perf
ups_perf = Enum.find(consensus_group, fn map -> map["name"] == "uneven-peanut-swift" end)
slk_perf = Enum.find(consensus_group, fn map -> map["name"] == "sharp-leather-kangaroo" end)
%{"max_seen" => max_seen} = perf
IO.inspect(max_seen)
IO.inspect(perf)
ups_perf || slk_perf
```

ups map from perf

```
%{
  "address" => "112J6SmH7LGKNLDyG6Wbqd9pmA2zAJbgNcmAwQZtYKYmNQunYd73",
  "bba_completions" => 35,
  "last_bba" => 0,
  "last_seen" => 0,
  "name" => "uneven-peanut-swift",
  "penalty" => 2.6833485996912394,
  "seen_votes" => 1377,
  "tenure" => 2.0721726190476186
}
```

<!-- livebook:{"break_markdown":true} -->

perf result

```
%{
  "blocks_since_epoch" => 35,
  "consensus_members" => [
    %{
      "address" => "11qCt2awAzB4E4kEGJbc3mteh9QmNoxkvHgBfeAQCXnGe8B4VvJ",
      "bba_completions" => 32,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "long-malachite-sawfish",
      "penalty" => 7.173230581434947,
      "seen_votes" => 1248,
      "tenure" => 3.351165674603175
    },
    %{
      "address" => "112Z3Q1gBvheEdAhUBwdpPbrJ3hNqMWqKb4rd5fVYb8V9ABXGtXo",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "smooth-gingerbread-koala",
      "penalty" => 4.09786689849127,
      "seen_votes" => 1376,
      "tenure" => 3.248387896825397
    },
    %{
      "address" => "112FYPhNYGEbQHekMvJNSmu2uBdfb1kzScf8pJbLrv9jzhgCprRg",
      "bba_completions" => 34,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "straight-vermilion-seahorse",
      "penalty" => 5.981279424637083,
      "seen_votes" => 1353,
      "tenure" => 4.53687996031746
    },
    %{
      "address" => "112gC7FTuiWED2DEAL7ucnJUUaT3zXF1zVgFtUT36peyEub6caHR",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "feisty-red-mantaray",
      "penalty" => 0.9972718253968254,
      "seen_votes" => 1376,
      "tenure" => 0.9972718253968254
    },
    %{
      "address" => "11i2B4bkNoYxyPztjzn1CR9TJfvCdPTQvtFsgrvaZmMtDxbNU9a",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "skinny-hemp-wombat",
      "penalty" => 4.075696226150271,
      "seen_votes" => 1377,
      "tenure" => 1.8962549603174603
    },
    %{
      "address" => "112TaojBAXfUWbivmtD8a7APNeaQZ6NAQ2rAqdQPuAjTMaQLfeoe",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "boxy-gunmetal-horse",
      "penalty" => 5.532959551281399,
      "seen_votes" => 1377,
      "tenure" => 5.0234375
    },
    %{
      "address" => "112Ez7Ci4KqyXmH7QreX5BTrRvNVxtvD7rvCnkF9sNLb7RmoZvP1",
      "bba_completions" => 28,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "tangy-cider-mantaray",
      "penalty" => 4.931506278022887,
      "seen_votes" => 1377,
      "tenure" => 1.715674603174603
    },
    %{
      "address" => "13bnf1UhKX7cEV9aLS9v4TvYPDXsdz4GNNm4YAdNAYoFm6kzepU",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "big-chiffon-beaver",
      "penalty" => 5.7296918096996485,
      "seen_votes" => 1377,
      "tenure" => 4.273561507936508
    },
    %{
      "address" => "14L75uokLxPQM39d4jxew46DpNVejEYWBFewqhuXCGURkmQQAuD",
      "bba_completions" => 27,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "restless-scarlet-sawfish",
      "penalty" => 10.39545382242354,
      "seen_votes" => 1248,
      "tenure" => 3.1946924603174605
    },
    %{
      "address" => "1129jkZcJF2ukV1uDgS5ZLZmN3NCgRHBB9iLAt4oBA8jycWnN6Vz",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "active-gingerbread-pike",
      "penalty" => 6.486495263235909,
      "seen_votes" => 1377,
      "tenure" => 4.460639880952381
    },
    %{
      "address" => "112GCPhm9jRMkmL1iSWuV2vBmdspgKD7UtvEH9rDoBb36TzxaEVk",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "muscular-gingerbread-kitten",
      "penalty" => 5.489552064925905,
      "seen_votes" => 1377,
      "tenure" => 5.3025545634920634
    },
    %{
      "address" => "11F6F6vhJnZwf8gB6PMPS8c4xVwBHtNef2y4ywbMEHvDciXzauY",
      "bba_completions" => 32,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "acidic-grape-puma",
      "penalty" => 11.82030181809077,
      "seen_votes" => 1248,
      "tenure" => 4.785739087301587
    },
    %{
      "address" => "145xJHRo2rxtSUuWJHeKy9Qd5e7bLuyq13fSPCcmFYyZiDYaACT",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "fluffy-corduroy-giraffe",
      "penalty" => 7.805524303799583,
      "seen_votes" => 1377,
      "tenure" => 6.600496031746031
    },
    %{
      "address" => "1128XYHXHeNWFpf9oKCaGhauoN7wCpDmUwo8b8WV5WHU3kG3QpxT",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "deep-sapphire-sheep",
      "penalty" => 3.7032426977914477,
      "seen_votes" => 1377,
      "tenure" => 2.0402281746031745
    },
    %{
      "address" => "13CWcHcYd8WXeziMVUobLPjYLvHKJCZHpDubF1vNfPt1o5SUeNz",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "skinny-amber-chameleon",
      "penalty" => 2.8468005952380953,
      "seen_votes" => 1377,
      "tenure" => 2.8468005952380953
    },
    %{
      "address" => "11oqRjWqoeY9B6CSnigMbHrquTKAwVrh8Ff5EZWjs9YULnL2NrH",
      "bba_completions" => 30,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "faint-fossilized-sloth",
      "penalty" => 5.415391156786964,
      "seen_votes" => 1377,
      "tenure" => 3.256919642857143
    },
    %{
      "address" => "11MtQjPfgo7YfLMDDrG7bazeSMyvyaFeYyGhXTDuspUfabf9GZq",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "damaged-lilac-pelican",
      "penalty" => 10.531466132875472,
      "seen_votes" => 1377,
      "tenure" => 7.450223214285714
    },
    %{
      "address" => "11gE9tBenyFKiNuzFo6TckNDjzYZxeL6DN5c1BSdQtWZWACQdTi",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "abundant-lipstick-rat",
      "penalty" => 4.390094215907748,
      "seen_votes" => 1376,
      "tenure" => 3.550248015873016
    },
    %{
      "address" => "112TZBuKXnJyLZ63r5X7Ta35aE12RYCoaZLgezCyu4tzyADiWxSP",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "colossal-malachite-perch",
      "penalty" => 9.381550804773966,
      "seen_votes" => 1377,
      "tenure" => 5.482713293650793
    },
    %{
      "address" => "13Bnhmk1h8Hw8mcpUdwW97heZH8mJBcS3uJJQoV6rcimUYRPP9h",
      "bba_completions" => 29,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "striped-coral-stork",
      "penalty" => 6.804786215131244,
      "seen_votes" => 1377,
      "tenure" => 5.450768849206349
    },
    %{
      "address" => "14VoG5k6jySrSigdCdFyPnWDmRDKehHFvjh9jCwjGUZTZNb8oeM",
      "bba_completions" => 34,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "festive-cobalt-snake",
      "penalty" => 1.7941264031425355,
      "seen_votes" => 1377,
      "tenure" => 1.4946428571428572
    },
    %{
      "address" => "112Guw4D4VFsrhSo9QewkeduP2BtzhboeDdc4bj5N54khm5D1oy2",
      "bba_completions" => 27,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "mini-vanilla-kitten",
      "penalty" => 5.0627824639517165,
      "seen_votes" => 1377,
      "tenure" => 1.1431051587301588
    },
    %{
      "address" => "11hMXG5Wo6F2WsLDhfCRrEVMBuSJJyoKrQihpnzr9sbQjUWgsJo",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "uneven-fuchsia-chinchilla",
      "penalty" => 11.617241819321162,
      "seen_votes" => 1377,
      "tenure" => 5.0140376984126975
    },
    %{
      "address" => "11DGvWhKxTsx6thvcAR12aockZwmmKGi2HpiLTcnXTgE2VYRAoU",
      "bba_completions" => 23,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "clean-lemon-woodpecker",
      "penalty" => 15.865526389318799,
      "seen_votes" => 1248,
      "tenure" => 2.040277777777778
    },
    %{
      "address" => "11k9pFHEQd67kZCudNzjhMx253zLRYgJRjU6EWjtPquTTt9hhuA",
      "bba_completions" => 34,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "basic-steel-mantis",
      "penalty" => 9.820892303709,
      "seen_votes" => 1348,
      "tenure" => 5.377901785714286
    },
    %{
      "address" => "118uzdZK4uTycPUBCbmRvdww7DGnsRqQUHxgPtTaJEDv6JK6ZEP",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "early-chili-squid",
      "penalty" => 2.634700297552442,
      "seen_votes" => 1377,
      "tenure" => 1.067063492063492
    },
    %{
      "address" => "14cFDbdyUdUa4WUXGoG9GmJ5TK4giPEXGxL8kF5XcuL8L1NyqeJ",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "flat-bamboo-swan",
      "penalty" => 0.9972718253968254,
      "seen_votes" => 1377,
      "tenure" => 0.9972718253968254
    },
    %{
      "address" => "112tFHR5xw5RJwN9KWkxz5zgWrGiKKesKbeyzQ7Mjn8sKkJJ7Zb5",
      "bba_completions" => 34,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "elegant-honeysuckle-salamander",
      "penalty" => 8.641897266630142,
      "seen_votes" => 1334,
      "tenure" => 4.2238839285714285
    },
    %{
      "address" => "112add6vQskvUdm5FHxFebcVNn9smFNPfPDcbrTx1yCJqkSU8ZM4",
      "bba_completions" => 29,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "soaring-rouge-whale",
      "penalty" => 14.539442144121441,
      "seen_votes" => 1377,
      "tenure" => 6.907242063492063
    },
    %{
      "address" => "112EpsMPsQcsT3jw9CpJEqWWTcfBqu2fP2V2M7avDcsKZwu5Bfm7",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "faithful-olive-dragon",
      "penalty" => 6.290588291107662,
      "seen_votes" => 1377,
      "tenure" => 3.257638888888889
    },
    %{
      "address" => "112J6SmH7LGKNLDyG6Wbqd9pmA2zAJbgNcmAwQZtYKYmNQunYd73",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "uneven-peanut-swift",
      "penalty" => 2.6833485996912394,
      "seen_votes" => 1377,
      "tenure" => 2.0721726190476186
    },
    %{
      "address" => "112GMZwxJdqeV2txUPFpJURy2rrveS7iTTtFPoyEspm5DLbWweT4",
      "bba_completions" => 1,
      "last_bba" => 33,
      "last_seen" => 35,
      "name" => "tangy-cinnabar-rat",
      "penalty" => 17.956226027957975,
      "seen_votes" => 0,
      "tenure" => 1.0815228174603175
    },
    %{
      "address" => "14E67eN5aabNMLTNne7pZuPqDve8C2tg1tXENkU1jdLUzoqZNM2",
      "bba_completions" => 28,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "radiant-rose-alligator",
      "penalty" => 4.026203517308311,
      "seen_votes" => 1353,
      "tenure" => 2.709151785714286
    },
    %{
      "address" => "14XUwaLShLpte48LqPRsfEP7M8E4abH5HKwqrhMKpktcuNPLPCA",
      "bba_completions" => 28,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "immense-denim-scorpion",
      "penalty" => 2.307882787310888,
      "seen_votes" => 1353,
      "tenure" => 0.750719246031746
    },
    %{
      "address" => "112tvV6v3HkFZWk7KfBTWUofMkZxzEeyAPMsofKJrr7JDU3vx7Zm",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "calm-clear-locust",
      "penalty" => 2.5438540791708326,
      "seen_votes" => 1353,
      "tenure" => 1.5259176587301586
    },
    %{
      "address" => "112jZ2BKoesyGQwyuSHjGM1ed8sspUqxcXRGBHMeUrps274JCUZx",
      "bba_completions" => 26,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "massive-gingham-panda",
      "penalty" => 3.254321889271812,
      "seen_votes" => 1312,
      "tenure" => 1.7889880952380954
    },
    %{
      "address" => "112UYszCGaYCqADp78dC1iuitsZo8yuza4nVxZJUCyAKpGowujZU",
      "bba_completions" => 34,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "electric-daffodil-cougar",
      "penalty" => 3.6333955401466005,
      "seen_votes" => 1348,
      "tenure" => 1.898611111111111
    },
    %{
      "address" => "112rnD1TfUZMtFmA8vgSBNMt246ALjFPdUKjrr2U1L5Lp2MCLKq2",
      "bba_completions" => 32,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "dandy-lead-python",
      "penalty" => 8.85636429256863,
      "seen_votes" => 1248,
      "tenure" => 4.343080357142857
    },
    %{
      "address" => "13Dut2wBstY4ucmFGEGQwgvmv38jZ1gX2rVRPfrrVH9i1NgB46U",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "keen-sangria-swallow",
      "penalty" => 9.124444756432187,
      "seen_votes" => 1353,
      "tenure" => 4.330654761904762
    },
    %{
      "address" => "112MgKDkPEx9ngKSTuWiPbLyJYkvyKHUdWRFSPEKQQj1BVPmgpK2",
      "bba_completions" => 34,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "amateur-mulberry-hornet",
      "penalty" => 7.739228929035248,
      "seen_votes" => 1317,
      "tenure" => 5.749925595238095
    },
    %{
      "address" => "14JcxrsQrYGiHKuKAZpvNNji7rBsWsK7Gg2pBwXY46bZNLfX5sU",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "brave-onyx-buffalo",
      "penalty" => 6.64211943036034,
      "seen_votes" => 1248,
      ...
    },
    %{
      "address" => "112ihnWeMjicS2fjN99nLd1TggF9ousCCXoTaEeonkDLHSDTQh1b",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "square-flint-lion",
      "penalty" => 5.387588355654762,
      ...
    },
    %{
      "address" => "14s6siAk1m9EVacGWPR2tbBirAnkj4GCBtUkwdZzCFS4EkrZAhh",
      "bba_completions" => 35,
      "last_bba" => 0,
      "last_seen" => 0,
      "name" => "rare-currant-chipmunk",
      ...
    }
  ],
  "current_height" => 994537,
  "max_seen" => 1377
}
```

<!-- livebook:{"break_markdown":true} -->

Looking to make this call:

```
# plumbum (kb: master) ~ curl -X POST \
#      -H 'Content-Type: application/json' \
#      -d '{"jsonrpc":"2.0","id":1,"method":"info_in_consensus"}' \
```

## Tailing the console.log

```elixir
require Logger

defmodule Tail do
  @moduledoc """
  Tail implements a simple file tail functionality.

  Given a file, a function, and an interval, Tail will execute the function with a list of new lines found
   in the file  and continue checking for additional lines on the interval.

  ## Usage

  {:ok, pid} = Tail.start_link("test.txt", &IO.inspect(&1), 1000)
  Tail.stop(pid)
  """

  use GenServer

  @type state :: {File.Stream.t(), ([String.t()] -> nil), integer, term, integer, integer}

  @doc """
  Public interface. Starts a Tail Genserver for the given file, function, and interval (in ms)
  """
  @spec start_link(String.t(), ([String.t()] -> nil), integer) :: GenServer.on_start()
  def start_link(file, fun, interval \\ 1000) do
    GenServer.start_link(__MODULE__, {file, fun, interval})
  end

  @doc """
  Public interface. Sends a call to kill the GenServer
  """
  @spec stop(pid) :: :ok
  def stop(pid) do
    GenServer.call(pid, :kill)
  end

  @doc """
  Init callback. Starts the check loop by casting :check to self and then returns the initial state
  """
  @spec init({String.t(), ([String.t()] -> nil), integer}) :: {:ok, state}
  def init({file, fun, interval}) do
    stream = File.stream!(file)
    GenServer.cast(self(), :check)
    {:ok, {stream, fun, interval, nil, 0, 0}}
  end

  @doc """
  Main loop. Calls check_for_lines, sleeps, then continues the loop by casting :check to self
  and returning with the (possibly updated) last_modified and position
  """
  @spec handle_cast(:check, state) :: {:noreply, state}
  def handle_cast(:check, state = {_stream, _fun, interval, _last_modified, _position, _size}) do
    state = check_for_lines(state)
    :timer.sleep(interval)
    GenServer.cast(self(), :check)
    {:noreply, state}
  end

  @doc """
  Handles :kill call. Checks for any final lines before stopping the genserver
  """
  @spec handle_call(:kill, {pid, term}, state) :: {:stop, :normal, :ok, state}
  def handle_call(:kill, _from, state) do
    state = check_for_lines(state)
    {:stop, :normal, :ok, state}
  end

  # Implementation of line checking. If the file doesn't exist, it simply returns the current state, assuming the
  # file will appear eventually. If the file hasn't been modified since last time, it also returns the current state.
  # If the file has been modified, Stream.drop(position) skips lines previously read, then Enum.each gathers the new lines.
  # Returns the new last_modified and position.
  @spec check_for_lines(state) :: state
  defp check_for_lines(state = {stream, fun, interval, last_modified, position, size}) do
    with {:exists, true} <- {:exists, File.exists?(stream.path)},
         {:ok, stat} <- File.stat(stream.path),
         {:mtime, true} <- {:mtime, stat.mtime != last_modified},
         {:size, true} <- {:size, stat.size >= size} do
      lines =
        stream
        |> Stream.drop(position)
        |> Enum.into([])

      if length(lines) > 0 do
        fun.(lines)
      end

      {stream, fun, interval, stat.mtime, position + length(lines), stat.size}
    else
      {:exists, false} -> {File.stream!(stream.path), fun, interval, last_modified, 0, 0}
      {:error, _} -> {File.stream!(stream.path), fun, interval, last_modified, 0, 0}
      {:size, false} -> {File.stream!(stream.path), fun, interval, last_modified, 0, 0}
      {:mtime, false} -> state
    end
  end
end
```

```elixir
defmodule TailDkg do
  def elected?(lines) do
    case lines do
      [h | tail] ->
        if String.match?(h, ~r/not in DKG this round/) do
          IO.puts("NOT ELECTED: " <> String.trim(h))
        end

        if String.match?(h, ~r/Preparing to run DKG/) do
          IO.puts("ELECTED: " <> String.trim(h))
        end

        elected?(tail)

      [] ->
        []
    end
  end
end

logs = [
  "2093 oe8 not a match theunahoe\n",
  "2093 oe8 " <> "not in DKG this round" <> " theunahoe\n",
  "2093 oe8 not a match theunahoe\n",
  "2093 oe8 not a match theunahoe\n",
  "2093 oe8 " <> "Preparing to run DKG" <> " theunahoe\n",
  "2093 oe8 not a match theunahoe\n",
  "2093 oe8 not a match theunahoe\n",
  "2093 oe8 not a match theunahoe\n",
  "2093 oe8 " <> "not in DKG this round" <> " theunahoe\n",
  "2093 oe8 not a match theunahoe\n",
  "2093 oe8 not a match theunahoe\n",
  "2093 oe8 " <> "not in DKG this round" <> " theunahoe\n",
  "2093 oe8 not a match theunahoe\n"
]

TailDkg.elected?(logs)
```

```elixir
# Usage for Tail
#
# {:ok, pid} = Tail.start_link("test.txt", &IO.inspect(&1))

# Tail.stop(pid)

# let's track elections by looking for 
# "Preparing to run DKG"
# "not in DKG this round"

# {:ok, pid} = Tail.start_link("../../validator_data/log/console.log", &TailDkg.elected?(&1))
```

```elixir
Tail.stop(pid)
```

```elixir
{:ok, pid2} =
  #Tail.start_link("../../validator_data/log/console.log", fn lines ->
    lines
    |> Enum.reject(&(!String.match?(&1, ~r/absorb_and_commit/)))
    |> IO.inspect()
  end)
```

```elixir
Tail.stop(pid2)
```

### NOTE!!!!

### watchtower script won't get latest until we redo `docker run` with latest tag.  On both validators...

* Both validators are on 1.2.2 but not `latest` via watchtower.
* Both are running VALIDATION_WIDTH=6

### RESOLVED - both are running `latest` with default `VALIDATION_WIDTH`

<!-- livebook:{"branch_parent_index":0} -->

## Ryzen vs OVH bare

```elixir
defmodule Pens do
  def perf_ratio(pens) do
    {p, t} = Enum.split_with(pens, fn %{"type" => type} -> type == "performance" end)

    Enum.reduce(p, 0.0, fn %{"amount" => amount}, acc -> acc + amount end) /
      Enum.reduce(t, 0.0, fn %{"amount" => amount}, acc -> acc + amount end)
  end
end
```

```elixir
IO.puts("On Ryzen, 1.3.3")
IO.puts("Confirmed in bottom 3 for some number of CGs in this group")

pens = [
  %{"amount" => 0.099853515625, "height" => 1_016_175, "type" => "performance"},
  %{"amount" => 0.858795166015625, "height" => 1_016_207, "type" => "performance"},
  %{"amount" => 0.9885711669921875, "height" => 1_016_368, "type" => "performance"},
  %{"amount" => 0.5, "height" => 1_016_110, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_016_143, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_016_175, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_016_207, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_016_239, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_016_271, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_016_303, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_016_335, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_016_368, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_016_400, "type" => "tenure"}
]

Pens.perf_ratio(pens)
```

```elixir
pens = [
  %{"amount" => 0.5, "height" => 1_022_021, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_022_054, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_022_086, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_022_119, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_022_152, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_022_185, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_022_217, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_022_250, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_022_283, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_022_315, "type" => "tenure"}
]

0.00
```

### A run just starting for UPS on tertius OVH   9/25 AM

Missing some BBAs

* Our seen 770 of 770 (max)
* Our BBA 15 of 21 (blocks)

#### 2nd CG not starting well, not in bottom 3, seems to do okay after rough start

* Our seen 6 of 68 (max)

* Our BBA 1 of 2 (blocks)

* Our seen 131 of 193 (max)

* Our BBA 4 of 5 (blocks)

##### 1026117: 12 blocks since epoch

* Our seen 427 of 489 (max)
* Our BBA 11 of 12 (blocks)

##### 1026119: 14 blocks since epoch

* Our seen 513 of 575 (max)
* Our BBA 13 of 14 (blocks)

##### 1026127: 22 blocks since epoch

* Our seen 851 of 913 (max)
* Our BBA 21 of 22 (blocks)

##### 1026132: 27 blocks since epoch

* Our seen 1066 of 1128 (max)
* Our BBA 26 of 27 (blocks)

```elixir
IO.puts("UPS on OVH tertius")

pens = [
  %{"amount" => 0.6993865966796875, "height" => 1_026_103, "type" => "performance"},
  %{"amount" => 0.7589263916015625, "height" => 1_026_135, "type" => "performance"},
  %{"amount" => 0.5, "height" => 1_026_070, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_026_103, "type" => "tenure"}
]

Pens.perf_ratio(pens)
```

### A SLK run 9/26 on Ryzen interserver

3rd? CG...   getting perf penalties

##### 1027765: 29 blocks since epoch

* Our seen 1027 of 1030 (max)
* Our BBA 20 of 29 (blocks)

##### 1027767: 31 blocks since epoch

* Our seen 1096 of 1099 (max)
* Our BBA 21 of 31 (blocks)

#### 4th?  starting well  `miner hbbft queue` showed all but two vals were "okay"

##### 1027772: 3 blocks since epoch

* Our seen 111 of 111 (max)
* Our BBA 3 of 3 (blocks)

##### 1027777: 8 blocks since epoch

* Our seen 318 of 318 (max)
* Our BBA 8 of 8 (blocks)

##### 1027784: 15 blocks since epoch

* Our seen 619 of 619 (max)
* Our BBA 15 of 15 (blocks)

##### 1027787: 18 blocks since epoch

* Our seen 748 of 748 (max)
* Our BBA 18 of 18 (blocks)

##### 1027791: 22 blocks since epoch

* Our seen 920 of 920 (max)
* Our BBA 22 of 22 (blocks)

##### 1027794: 25 blocks since epoch

* Our seen 1049 of 1049 (max)
* Our BBA 25 of 25 (blocks)

##### 1027797: 28 blocks since epoch

* Our seen 1178 of 1178 (max)
* Our BBA 28 of 28 (blocks)

##### 1027800: 31 blocks since epoch

* Our seen 1307 of 1307 (max)
* Our BBA 31 of 31 (blocks)

```elixir
IO.puts("SLK on Ryzen intersever")

pens = [
  %{"amount" => 0.299652099609375, "height" => 1_027_701, "type" => "performance"},
  %{"amount" => 0.6994781494140625, "height" => 1_027_734, "type" => "performance"},
  %{"amount" => 0.999359130859375, "height" => 1_027_767, "type" => "performance"},
  %{"amount" => 0.5, "height" => 1_027_636, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_027_669, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_027_701, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_027_734, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_027_767, "type" => "tenure"}
]

Pens.perf_ratio(pens)
```

### Elected again on 26 Sept 2021  SLK  on Ryzen

#### 2nd? CG going well

##### 1027936: 0 blocks since epoch

* Our seen 0 of 0 (max)
* Our BBA 0 of 0 (blocks)

##### 1027938: 3 blocks since epoch

* Our seen 111 of 112 (max)
* Our BBA 3 of 3 (blocks)

##### 1027942: 7 blocks since epoch

* Our seen 278 of 279 (max)
* Our BBA 7 of 7 (blocks)

##### 1027948: 13 blocks since epoch

* Our seen 532 of 533 (max)
* Our BBA 13 of 13 (blocks)

```elixir
IO.puts("SLK on Ryzen intersever...  just a bit after the above run")

pens = [
  %{"amount" => 0.5, "height" => 1_027_900, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_027_933, "type" => "tenure"}
]

0.00
```

```elixir
IO.puts("SLK on Ryzen intersever...  in and out, one CG 9/30")

pens = [
  %{"amount" => 0.099853515625, "height" => 1_033_918, "type" => "performance"},
  %{"amount" => 0.5, "height" => 1_033_883, "type" => "tenure"}
]

Pens.perf_ratio(pens)
```

Not so hot at the beginning.  SLK in again, 10/1

##### 1035497: 46 blocks since epoch

* Our seen 1644 of 1648 (max)
* Our BBA 33 of 46 (blocks)

#### 2nd CG

##### 1035499: 0 blocks since epoch

* Our seen 0 of 0 (max)
* Our BBA 0 of 0 (blocks)

##### 1035505: 6 blocks since epoch

* Our seen 197 of 199 (max)
* Our BBA 5 of 6 (blocks)

##### 1035508: 9 blocks since epoch

* Our seen 301 of 303 (max)
* Our BBA 7 of 9 (blocks)

##### 1035511: 12 blocks since epoch

* Our seen 407 of 409 (max)
* Our BBA 10 of 12 (blocks)

##### 1035513: 14 blocks since epoch

* Our seen 473 of 475 (max)
* Our BBA 10 of 14 (blocks)

##### 1035525: 26 blocks since epoch

* Our seen 901 of 903 (max)
* Our BBA 16 of 26 (blocks)

```elixir
IO.puts("SLK on Ryzen intersever...  in for three CGs, ROUGH")
IO.puts("13 of 43 had exactly 16 bba completions when the rest were 31 or 32")

pens = [
  %{"amount" => 0.099853515625, "height" => 1_033_918, "type" => "performance"},
  %{"amount" => 1.29864501953125, "height" => 1_035_497, "type" => "performance"},
  %{"amount" => 1.4989013671875, "height" => 1_035_536, "type" => "performance"},
  %{"amount" => 1.59869384765625, "height" => 1_035_572, "type" => "performance"},
  %{"amount" => 0.5, "height" => 1_035_449, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_035_497, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_035_536, "type" => "tenure"}
]

Pens.perf_ratio(pens)
```

```elixir
IO.puts("UPS on Ryzen intersever... NO PERF PENS!!!")

pens = [
  %{"amount" => 0.5, "height" => 1_037_119, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_037_152, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_037_185, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_037_218, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_037_251, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_037_284, "type" => "tenure"}
]

0.00
```

UPS 10/5

##### 1041348: 22 blocks since epoch

* Our seen 911 of 911 (max)
* Our BBA 22 of 22 (blocks)

```elixir
IO.puts("UPS on Ryzen interserver .... some perf, but good run")

pens = [
  %{"amount" => 0.659027099609375, "height" => 1_041_291, "type" => "performance"},
  %{"amount" => 0.5, "height" => 1_041_258, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_041_291, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_041_324, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_041_356, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_041_388, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_041_420, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_041_452, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_041_487, "type" => "tenure"}
]

Pens.perf_ratio(pens)
```

```elixir
IO.puts("SLK 10/8 on Ryzen interserver .... horrible perf pens")

pens = [
  %{"amount" => 0.6590728759765625, "height" => 1_044_894, "type" => "performance"},
  %{"amount" => 1.318145751953125, "height" => 1_044_797, "type" => "performance"},
  %{"amount" => 0.5, "height" => 1_044_764, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_044_797, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_044_830, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_044_862, "type" => "tenure"}
]

Pens.perf_ratio(pens)
```

### SLK 10/9 -- improbably joined CG with high penalty _while_ I had IS investigate the server

#### Big Perf Penalty at start of run:  1.31...   WHY????    Bottom 3

1.3181304931640625 -->

##### 1046809: 7 blocks since epoch

* Our seen 263 of 266 (max)
* Our BBA 7 of 7 (blocks)

##### 1046809: 7 blocks since epoch

* Our seen 263 of 266 (max)
* Our BBA 7 of 7 (blocks)

##### 1046819: 17 blocks since epoch

* Our seen 693 of 696 (max)
* Our BBA 17 of 17 (blocks)

##### 1046831: 29 blocks since epoch

* Our seen 1207 of 1210 (max)
* Our BBA 29 of 29 (blocks)

New election...  seems to be doing well

##### 1046843: 8 blocks since epoch

* Our seen 322 of 322 (max)
* Our BBA 8 of 8 (blocks)

##### 1046854: 19 blocks since epoch

* Our seen 795 of 795 (max)
* Our BBA 19 of 19 (blocks)

```elixir
IO.puts("SLK 10/9 on Ryzen interserver .... bottom 3 perf")

pens = [
  %{"amount" => 1.3181304931640625, "height" => 1_046_800, "type" => "performance"},
  %{"amount" => 0.5, "height" => 1_046_767, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_046_800, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_046_833, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_046_866, "type" => "tenure"}
]

Pens.perf_ratio(pens)
```

```elixir
IO.puts("UPS 10/13 on Ryzen interserver .... 2 CGs with perf")
IO.puts("3 missed BBA at 1_052_447 for 0.3")
IO.puts("8 missed BBA at 1_052_414 for 0.8")

pens = [
  %{"amount" => 0.2998809814453125, "height" => 1_052_447, "type" => "performance"},
  %{"amount" => 0.79937744140625, "height" => 1_052_414, "type" => "performance"},
  %{"amount" => 0.5, "height" => 1_052_381, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_052_414, "type" => "tenure"}
]

Pens.perf_ratio(pens)
```

Some big DKGs on SLK pbau.painlesspm.com.  Logs captured.  Evan knows.  No resolution.

* [ ] rebuild pbau.painlesspm.com

<!-- livebook:{"break_markdown":true} -->

UPS in CG...  29 Oct 2021

##### 1075875: 13 blocks since epoch

* Our seen 496 of 498 (max)
* Our BBA 13 of 13 (blocks)

##### 1075880: 18 blocks since epoch

* Our seen 691 of 693 (max)
* Our BBA 18 of 18 (blocks)

##### 1075888: 26 blocks since epoch

* Our seen 1002 of 1004 (max)
* Our BBA 26 of 26 (blocks)

##### 1075916: 54 blocks since epoch

* Our seen 2092 of 2094 (max)
* Our BBA 54 of 54 (blocks)
* position: 16

long epoch...

##### 1075924: 62 blocks since epoch

* Our seen 2397 of 2399 (max)
* Our BBA 62 of 62 (blocks)
* position: 16

##### 1075943: 2 blocks since epoch

* Our seen 62 of 65 (max)
* Our BBA 2 of 2 (blocks)
* position: 36

##### 1075948: 7 blocks since epoch

* Our seen 257 of 262 (max)
* Our BBA 7 of 7 (blocks)
* position: 36

##### 1075959: 18 blocks since epoch

* Our seen 717 of 722 (max)
* Our BBA 18 of 18 (blocks)
* position: 36

##### 1075965: 24 blocks since epoch

* Our seen 958 of 963 (max)
* Our BBA 24 of 24 (blocks)
* position: 36

##### 1075967: 26 blocks since epoch

* Our seen 1043 of 1048 (max)
* Our BBA 26 of 26 (blocks)
* position: 36

##### 1075978: 4 blocks since epoch

* Our seen 145 of 145 (max)
* Our BBA 4 of 4 (blocks)
* position: 8

##### 1075981: 7 blocks since epoch

* Our seen 265 of 265 (max)
* Our BBA 7 of 7 (blocks)
* position: 8

#### some BBA this epoch

##### 1076013: 6 blocks since epoch

* Our seen 224 of 224 (max)
* Our BBA 5 of 6 (blocks)
* position: 31

##### 1076015: 8 blocks since epoch

* Our seen 296 of 296 (max)
* Our BBA 6 of 8 (blocks)
* position: 31

##### 1076020: 13 blocks since epoch

* Our seen 486 of 486 (max)
* Our BBA 10 of 13 (blocks)
* position: 31

##### 1076030: 23 blocks since epoch

* Our seen 866 of 866 (max)
* Our BBA 19 of 23 (blocks)
* position: 31

##### 1076035: 28 blocks since epoch

* Our seen 1058 of 1058 (max)
* Our BBA 22 of 28 (blocks)
* position: 31

##### 1076037: 30 blocks since epoch

* Our seen 1135 of 1135 (max)
* Our BBA 24 of 30 (blocks)
* position: 31

#### new epoch

##### 1076042: 3 blocks since epoch

* Our seen 99 of 99 (max)
* Our BBA 3 of 3 (blocks)
* position: 4

##### 1076074: 3 blocks since epoch

* Our seen 117 of 121 (max)
* Our BBA 3 of 3 (blocks)
* position: 38

```elixir
IO.puts("UPS 10/13 on PbAu2 Ryzen interserver ....")
IO.puts("fair amount of penalties, not sure about bottom three in final few epochs")

pens = [
  %{"amount" => 0.29974365234375, "height" => 1_073_984, "type" => "performance"},
  %{"amount" => 0.599578857421875, "height" => 1_076_037, "type" => "performance"},
  %{"amount" => 0.69952392578125, "height" => 1_076_069, "type" => "performance"},
  %{"amount" => 0.7994384765625, "height" => 1_076_167, "type" => "performance"},
  %{"amount" => 0.8994598388671875, "height" => 1_076_134, "type" => "performance"},
  %{"amount" => 0.5, "height" => 1_075_860, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_075_939, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_075_972, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_076_005, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_076_037, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_076_069, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_076_101, "type" => "tenure"},
  %{"amount" => 0.5, "height" => 1_076_134, "type" => "tenure"}
]

Pens.perf_ratio(pens)
```

## Bottom

<!-- livebook:{"branch_parent_index":1} -->

## Stakejoy hbbft_perf

A little api that I am working on for hbbft perf data. 
/v1/hbbft/blocks/<block_num> : will return hbbft perf for the block height
/v1/hbbft/epochs/<epoch_num>: will return all of the hbbft perfs in the whole epoch 
https://tools.stakejoy.com/v1/hbbft/blocks/1048675
https://tools.stakejoy.com/v1/hbbft/epochs/27263
https://tools.stakejoy.com/v1/hbbft/latest 
I thought it might be useful for some folks investigating penalties and bad performance.

```elixir
defmodule ToolsStakeJoyClient do
  require Tesla

  # helium-api.stakejoy.com
  def client(url \\ "https://tools.stakejoy.com/") do
    Tesla.client([
      {Tesla.Middleware.BaseUrl, url},
      Tesla.Middleware.JSON
    ])
  end
end
```

```elixir
# https://tools.stakejoy.com/v1/hbbft/latest

{:ok, %{body: body}} = ToolsStakeJoyClient.client() |> Tesla.get("v1/hbbft/" <> "blocks/1075875")

# {:ok, %{body: body2}} =
#   ToolsStakeJoyClient.client() |> Tesla.get("v1/hbbft/" <> "epoch/27400")
#   
```

```elixir
body
|> Enum.map(fn val ->
  cond do
    val["address"] == "112J6SmH7LGKNLDyG6Wbqd9pmA2zAJbgNcmAwQZtYKYmNQunYd73" ->
      Map.put(val, :name, "uneven-peanut-swift")

    true ->
      val
  end
end)
```

## Penalties

### BBA

You must miss 12 or more BBA in an epoch (round) in order to get penalized

## Pbau Interserver rebuild....

UPS just did a run on Pbau2 and is >= 9 penalty.  So, UPS is now on pbautertius with SLK on Pbau2.

* [ ] hear back from Interserver re: fresh install
* [ ] follow the tasks to setup a drive, mount, etc
